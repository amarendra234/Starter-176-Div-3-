#include <bits/stdc++.h>
using namespace std;
#define ll long long
void dfs(ll src,ll parent,vector<vector<ll>>&adj,ll dp[]){
    //vis[src]=true;
     for(auto nbr:adj[src]){
        if(nbr!=parent){
            dp[nbr]=__gcd(dp[nbr],dp[src]);
            dfs(nbr,src,adj,dp);
        }
     }
}
int main(){
    int t;
    cin>>t;
    while(t--){
       ll n;
       cin>>n;
       int a[n+1];
       ll prime[]={2,3,5,7,11,13,17,19,23,29};
       for(int i=1;i<=n;i++){
        cin>>a[i];
       }
       vector<vector<ll>>adj(n+1);
       ll dp[n+1];
       for(int i=0;i<n-1;i++){
           ll u,v;
           cin>>u>>v;
           adj[u].push_back(v);
           adj[v].push_back(u);
       }
       for(ll i=1;i<=n;i++){
            for(ll j=1;j<=n;j++){
                dp[j]=a[j];
            }

            dfs(i,-1,adj,dp);
            ll ans=0;
            for(ll j=1;j<=n;j++){
                  for(auto primes:prime){
                    if((dp[j]%primes)!=0){
                        ans+=primes;
                        break;
                    }
                  }
            }
            cout<<ans<<" ";
       }
       cout<<endl;
    }
}
